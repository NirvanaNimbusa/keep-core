name: Go

#TODO: extend the conditions once workflow gets tested together with other workflows
on:
  push:
    branches:
      # - master
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-v2-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-v2-${{ github.ref }}-
            ${{ runner.os }}-buildx-v2-

      # TODO: This step was left here intentionally so we can track disk space
      # usage for a while. We were trying to fight problems with out of disk space
      # that happened due to the size of data restored from cache. The cache size
      # was growing linearly with subsequent workflow runs. We want to observe
      # available disk space for `/`. Fresh execution starts with 20 GB, we expect
      # to have no less than 15 GB after the cache is restored.
      - run: sudo df -h

      - run: ls -la .

      - name: Build Docker Development Image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          target: gobuild
          tags: go-build-env
          load: true # load image to local registry to use it in next steps
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: Run Tests
      #   run: |
      #     docker run \
      #       --volume $GITHUB_WORKSPACE/test-results:/mnt/test-results \
      #       --workdir /go/src/github.com/keep-network/keep-core \
      #       go-build-env \
      #       go test -json ./...

      # This step is after tests as we want eventually to configure it as publish step.
      - name: Build Docker Runtime Image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: keep-client
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
